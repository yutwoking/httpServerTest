/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package httpServer_sample;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Map.Entry;

public class Library {
	public static void main(String[] args) throws Exception {
		System.out.println("start server >>>");

		try (ServerSocket server = new ServerSocket(80);) {
			while (true) {
				serverWork(server);
			}
		}catch (Exception e) {
			e.printStackTrace(System.err);
		}
	}

	public static void serverWork(ServerSocket server) throws Exception {
		Socket socket = server.accept();
		System.out.println("start request >>>");
		BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream(), "UTF-8"));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));

		Request request = new Request(in);
		System.out.println(request.get1stLine());
		for (Entry<String, String> entry : request.getHeaders().entrySet()) {
			System.out.println(entry.getKey() + "：" + entry.getValue());
		}
		System.out.println();
		System.out.println(request.getBody());

		Response response = new Response(request);

		bw.write(response.get1stLine() + "\n");
		for (Entry<String, String> entry : response.getHeaders().entrySet()) {
			bw.write(entry.getKey() + "：" + entry.getValue() + "\n");
		}
		bw.write("\n");
		bw.write(response.getBody());
		bw.flush();

		bw.close();

		System.out.println("<<< end request");

	}

}
